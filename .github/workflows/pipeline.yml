name: Deployment Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  tests:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_DB_URL: ${{ secrets.DB_URL }}
          envkey_PORT: ${{ secrets.PORT }}
          envkey_DB_NAME: ${{ secrets.DB_NAME }}
          envkey_TEST_DB_NAME: ${{ secrets.TEST_DB_NAME }}
          envkey_SECRET: ${{ secrets.SECRET }}
          envkey_NODE_ENV: test
          directory: blog-server
          file_name: .env
          fail_on_empty: true

      - name: Install dependencies
        run: npm run install-all

      - name: Check style in server
        run: npm run lint-server

      - name: Check style in client
        run: npm run lint-client

      - name: test server
        run: npm run test-server

      - name: test client
        run: npm run test-client

      - name: build
        run: npm run build

      - name: e2e tests
        uses: cypress-io/github-action@v5
        with:
          command: npm run cypress
          start: npm run start-cypress-mode
          wait-on: http://localhost:8080

  deployment:
    runs-on: ubuntu-20.04
    needs: [tests]
    if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ', '), '#skip') }}
    steps:
      - uses: superfly/flyctl-actions/setup-flyctl@master 
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: print commit COMMIT_MESSAGES
        run: echo "$COMMIT_MESSAGES"
      - name: deploy to fly.io
        env:
          COMMIT_MESSAGES: ${{ join(github.event.commits.*.message, ', ') }}
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy --remote-only
        # run: echo "$COMMIT_MESSAGES"

      - name: Deployment Success Discord Notification
        if: ${{success()}}
        # run: echo "deployment success"
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: info
          details: A new build of blog app deployed to https://black-grass-1701.fly.dev by ${{ github.event.commits[0].author.name }}!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Deployment Failure Discord Notification
        if: ${{failure()}}
        # run: echo "deployment failure"
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: error
          details: Blog app deployed to https://black-grass-1701.fly.dev by ${{ github.event.commits[0].author.name }} failed!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

  tag_release:
    needs: [deployment]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Bump version and push tag
        env:
          DEFAULT_BUMP: patch
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # run: echo shouldDeployTagRelease
        uses: anothrNick/github-tag-action@1.61.0
